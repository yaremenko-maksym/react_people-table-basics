{"version":3,"sources":["components/HomePage/HomePage.tsx","api/people.ts","api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeopleFromServer","a","fetch","response","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","peoples","map","people","uuidv4","PeoplePage","useState","setPeoples","getPeople","useCallback","peopleFromServer","withParents","child","copyChild","parent","find","father","mother","useEffect","NotFoundPage","Header","to","App","path","element","ReactDOM","render","basename","document","getElementById"],"mappings":"kWAIaA,EAAqB,WAChC,OACE,qBAAKC,UAAU,WAAf,SACE,oBAAIA,UAAU,kBAAd,0B,sCCHOC,EAAmB,uCAAG,4BAAAC,EAAA,sEACVC,MAAM,GAAD,OCLN,wDDKM,iBADK,cAC3BC,EAD2B,yBAG1BA,EAASC,QAHiB,2CAAH,qD,QEKnBC,G,MAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,OAEA,OACE,qBAAIP,UAAU,0BAAd,UACE,oBAAIA,UAAU,oBAAd,SAAmCO,EAAOC,OAC1C,oBAAIR,UAAU,oBAAd,SAAmCO,EAAOE,MAC1C,oBAAIT,UAAU,oBAAd,SAAmCO,EAAOG,OAC1C,oBAAIV,UAAU,oBAAd,SAAmCO,EAAOI,OAC1C,oBAAIX,UAAU,oBAAd,SAAmCO,EAAOK,YAAc,MACxD,oBAAIZ,UAAU,oBAAd,SAAmCO,EAAOM,YAAc,WCPjDC,G,MAA+B,SAAC,GAEtC,IADLC,EACI,EADJA,QAEA,OACE,wBAAOf,UAAU,cAAjB,UACE,uBAAOA,UAAU,oBAAjB,SACE,qBAAIA,UAAU,mBAAd,UACE,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,iBACA,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,oBACA,oBAAIA,UAAU,oBAAd,yBAGHe,GACC,uBAAOf,UAAU,oBAAjB,SACGe,EAAQC,KAAI,SAAAC,GAAM,OACjB,cAAC,EAAD,CACEV,OAAQU,GACHC,yBCvBNC,G,MAAuB,WAClC,MAA8BC,mBAAqC,MAAnE,mBAAOL,EAAP,KAAgBM,EAAhB,KAEMC,EAAYC,sBAAW,sBAAC,8BAAArB,EAAA,sEACaD,IADb,OACtBuB,EADsB,OAEtBC,EAAmCD,EAAiBR,KAAI,SAAAU,GAC5D,IAAMC,EAA4B,eAAQD,GAEpCE,EAASJ,EAAiBK,MAAK,SAAAtB,GACnC,OAAOmB,EAAMb,aAAeN,EAAOC,MAC9BkB,EAAMb,aAAeN,EAAOC,QAWnC,OARIoB,IACiB,MAAfA,EAAOnB,IACTkB,EAAUG,OAASF,EAEnBD,EAAUI,OAASH,GAIhBD,KAGTN,EAAWI,GArBiB,2CAsB3B,IAMH,OAJAO,qBAAU,WACRV,MACC,IAGD,sBAAKtB,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,0BAIA,cAAC,EAAD,CAAae,QAASA,SC1CfkB,G,MAAyB,WACpC,OACE,qBAAKjC,UAAU,eAAf,SACE,oBAAIA,UAAU,sBAAd,gCCHOkC,G,MAAmB,WAC9B,OACE,sBAAKlC,UAAU,SAAf,UACE,cAAC,IAAD,CAASmC,GAAG,QAAQnC,UAAU,eAA9B,kBAIA,cAAC,IAAD,CAASmC,GAAG,UAAUnC,UAAU,eAAhC,yBCaSoC,EAhBH,kBACV,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUH,GAAG,QAE1C,cAAC,IAAD,CAAOE,KAAK,YAAYC,QAAS,cAAC,EAAD,MAEjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCd/BC,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,6BAAxB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1333831.chunk.js","sourcesContent":["import React from 'react';\n\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"HomePage__title\">\n        Home Page\n      </h1>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nimport { People } from '../types/people';\n\nexport const getPeopleFromServer = async (): Promise<People[]> => {\n  const response = await fetch(`${BASE_URL}/people.json`);\n\n  return response.json();\n};\n","export const BASE_URL = 'https://mate-academy.github.io/react_people-table/api';\n","import React from 'react';\nimport { PeopleWithParents } from '../../types/people';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: PeopleWithParents;\n};\n\nexport const PersonRow: React.FC<Props> = ({\n  person,\n}) => {\n  return (\n    <tr className=\"PeopleTable__row Person\">\n      <td className=\"PeopleTable__cell\">{person.name}</td>\n      <td className=\"PeopleTable__cell\">{person.sex}</td>\n      <td className=\"PeopleTable__cell\">{person.born}</td>\n      <td className=\"PeopleTable__cell\">{person.died}</td>\n      <td className=\"PeopleTable__cell\">{person.motherName || '-'}</td>\n      <td className=\"PeopleTable__cell\">{person.fatherName || '-'}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { PeopleWithParents } from '../../types/people';\nimport { PersonRow } from '../PersonRow';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  peoples: PeopleWithParents[] | null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peoples,\n}) => {\n  return (\n    <table className=\"PeopleTable\">\n      <thead className=\"PeopleTable__head\">\n        <tr className=\"PeopleTable__row\">\n          <th className=\"PeopleTable__cell\">name</th>\n          <th className=\"PeopleTable__cell\">sex</th>\n          <th className=\"PeopleTable__cell\">born</th>\n          <th className=\"PeopleTable__cell\">died</th>\n          <th className=\"PeopleTable__cell\">mother</th>\n          <th className=\"PeopleTable__cell\">father</th>\n        </tr>\n      </thead>\n      {peoples && (\n        <tbody className=\"PeopleTable__body\">\n          {peoples.map(people => (\n            <PersonRow\n              person={people}\n              key={uuidv4()}\n            />\n          ))}\n        </tbody>\n      )}\n    </table>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { getPeopleFromServer } from '../../api/people';\n\nimport { People, PeopleWithParents } from '../../types/people';\nimport { PeopleTable } from '../PeopleTable';\n\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC = () => {\n  const [peoples, setPeoples] = useState<PeopleWithParents[] | null>(null);\n\n  const getPeople = useCallback(async () => {\n    const peopleFromServer: People[] = await getPeopleFromServer();\n    const withParents: PeopleWithParents[] = peopleFromServer.map(child => {\n      const copyChild: PeopleWithParents = { ...child };\n\n      const parent = peopleFromServer.find(person => {\n        return child.fatherName === person.name\n          || child.fatherName === person.name;\n      });\n\n      if (parent) {\n        if (parent.sex === 'm') {\n          copyChild.father = parent;\n        } else {\n          copyChild.mother = parent;\n        }\n      }\n\n      return copyChild;\n    });\n\n    setPeoples(withParents);\n  }, []);\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"PeoplePage\">\n      <h1 className=\"PeoplePage__title\">\n        People table\n      </h1>\n\n      <PeopleTable peoples={peoples} />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"NotFoundPage\">\n      <h1 className=\"NotFoundPage__title\">\n        Page not found\n      </h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <nav className=\"header\">\n      <NavLink to=\"/home\" className=\"header__link\">\n        HOME\n      </NavLink>\n\n      <NavLink to=\"/people\" className=\"header__link\">\n        PEOPLE\n      </NavLink>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Header } from './components/Header';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"/people/*\" element={<PeoplePage />} />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/react_people-table-basics\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}